plugins {
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java'
}

group = 'com.portfolio'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_21
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // Use Spring Data JPA but with minimal configuration
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.apache.poi:poi-ooxml:5.2.5' // For XLSX
    implementation 'com.opencsv:opencsv:5.9' // For CSV
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // Or jjwt-gson if you use Gson
    // Keep H2 for testing
    runtimeOnly 'com.h2database:h2'
    // Add PostgreSQL dependency
    runtimeOnly 'org.postgresql:postgresql'
    // Add Liquibase for database versioning
    implementation 'org.liquibase:liquibase-core'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs += ['-parameters']
}

/*
plugins {
    // ...existing code...
    // id 'org.flywaydb.flyway' version '9.22.3'
}

flyway {
    url = 'jdbc:h2:file:./data/portfoliodb'
    user = 'sa'
    password = ''
    locations = ['classpath:db/migration']
}
*/
